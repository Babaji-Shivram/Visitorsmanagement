{
  "info": {
    "name": "BABAJI SHIVRAM Visitor Management API",
    "description": "Comprehensive API collection for the BABAJI SHIVRAM Visitor Management System.\n\nThis collection includes all endpoints for:\n- User authentication and authorization\n- Visitor lifecycle management\n- Email notifications and templates\n- Staff and location management\n- System configuration and monitoring\n\n## Getting Started\n1. Set the base URL in collection variables\n2. Login using /api/auth/login to get JWT token\n3. The token will be automatically set for subsequent requests\n4. Explore the various modules using the organized folders\n\n## Environment Variables\n- `baseUrl`: API base URL (default: http://localhost:9524)\n- `authToken`: JWT token (automatically set after login)\n\n## Support\nFor technical support: gogulan.a@babajishivram.com",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:9524",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üîê Authentication",
      "description": "User authentication and authorization endpoints",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(response.token).to.not.be.empty;",
                  "    });",
                  "} else {",
                  "    pm.test('Login failed', function () {",
                  "        pm.expect(pm.response.code).to.equal(200);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"Admin123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Authenticate user and receive JWT token.\n\n**Default Admin Credentials:**\n- Email: admin@company.com\n- Password: Admin123!\n\n**Super Admin Credentials:**\n- Email: superadmin@company.com\n- Password: Welcome!23"
          },
          "response": []
        },
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@company.com\",\n  \"password\": \"StrongPass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"role\": \"Staff\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user in the system. Requires Admin role.\n\n**Available Roles:**\n- Admin: Full system access\n- Staff: Staff member operations\n- Reception: Reception desk operations\n\n**Password Requirements:**\n- Minimum 6 characters\n- At least one uppercase letter\n- At least one lowercase letter\n- At least one digit"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìß Email Management",
      "description": "Email notification and template management",
      "item": [
        {
          "name": "Test Email Connection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/email/test-connection",
              "host": ["{{baseUrl}}"],
              "path": ["api", "email", "test-connection"]
            },
            "description": "Test the connection to Office 365 SMTP server.\n\n**Validates:**\n- SMTP server connectivity (smtp.office365.com:587)\n- Authentication credentials\n- SSL/TLS configuration\n- Network connectivity\n\n**Note:** Only administrators can perform this test."
          },
          "response": []
        },
        {
          "name": "Send Staff Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"staffEmail\": \"staff@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/email/notify-staff/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "email", "notify-staff", "1"]
            },
            "description": "Send notification email to staff member when a visitor mentions them.\n\n**Email Content Includes:**\n- Visitor's name and contact information\n- Purpose of visit\n- Expected arrival time\n- Professional company branding\n\n**Path Parameter:**\n- visitorId: ID of the visitor who mentioned the staff member"
          },
          "response": []
        },
        {
          "name": "Send Approval Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"visitorId\": 1,\n  \"visitorEmail\": \"visitor@email.com\",\n  \"visitorName\": \"John Doe\",\n  \"visitDate\": \"2025-08-05T14:30:00Z\",\n  \"companyName\": \"BABAJI SHIVRAM\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/email/send-approval",
              "host": ["{{baseUrl}}"],
              "path": ["api", "email", "send-approval"]
            },
            "description": "Send approval confirmation email to visitor.\n\n**Template Features:**\n- Welcome message with approval confirmation\n- Visit details and instructions\n- Contact information for assistance\n- Green accent colors for positive confirmation"
          },
          "response": []
        },
        {
          "name": "Send Rejection Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"visitorId\": 1,\n  \"visitorEmail\": \"visitor@email.com\",\n  \"visitorName\": \"John Doe\",\n  \"reason\": \"Security clearance required\",\n  \"companyName\": \"BABAJI SHIVRAM\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/email/send-rejection",
              "host": ["{{baseUrl}}"],
              "path": ["api", "email", "send-rejection"]
            },
            "description": "Send polite rejection notification to visitor.\n\n**Template Features:**\n- Professional, respectful tone\n- Clear explanation when provided\n- Alternative contact methods\n- Company contact information"
          },
          "response": []
        },
        {
          "name": "Send Check-in Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"visitorId\": 1,\n  \"visitorEmail\": \"visitor@email.com\",\n  \"visitorName\": \"John Doe\",\n  \"checkInTime\": \"2025-08-05T14:30:00Z\",\n  \"companyName\": \"BABAJI SHIVRAM\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/email/send-checkin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "email", "send-checkin"]
            },
            "description": "Send check-in confirmation email to visitor.\n\n**Template Features:**\n- Check-in confirmation with timestamp\n- Visit duration and guidelines\n- Emergency contact information\n- Blue accent colors for informational content"
          },
          "response": []
        },
        {
          "name": "Send Check-out Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"visitorId\": 1,\n  \"visitorEmail\": \"visitor@email.com\",\n  \"visitorName\": \"John Doe\",\n  \"checkOutTime\": \"2025-08-05T16:30:00Z\",\n  \"visitDuration\": \"2 hours\",\n  \"companyName\": \"BABAJI SHIVRAM\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/email/send-checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "email", "send-checkout"]
            },
            "description": "Send thank you and check-out confirmation email.\n\n**Template Features:**\n- Appreciation message for the visit\n- Visit summary with duration\n- Feedback request and contact info\n- Warm, friendly closing tone"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë• Visitor Management",
      "description": "Complete visitor lifecycle management",
      "item": [
        {
          "name": "Get All Visitors",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/visitors?page=1&pageSize=10&status=Pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "pageSize",
                  "value": "10",
                  "description": "Items per page (default: 10)"
                },
                {
                  "key": "status",
                  "value": "Pending",
                  "description": "Filter by status: Pending, Approved, Rejected"
                },
                {
                  "key": "locationId",
                  "value": "",
                  "description": "Filter by location ID",
                  "disabled": true
                }
              ]
            },
            "description": "Retrieve paginated list of visitors with optional filtering.\n\n**Query Parameters:**\n- page: Page number for pagination\n- pageSize: Number of items per page\n- status: Filter by visitor status\n- locationId: Filter by specific location\n\n**Visitor Statuses:**\n- Pending: Awaiting approval\n- Approved: Visit approved\n- Rejected: Visit denied\n- CheckedIn: Currently on premises\n- CheckedOut: Visit completed"
          },
          "response": []
        },
        {
          "name": "Create Visitor",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@email.com\",\n  \"phone\": \"+1234567890\",\n  \"company\": \"Visitor Company Ltd\",\n  \"purposeOfVisit\": \"Business meeting and project discussion\",\n  \"staffToMeet\": \"staff@company.com\",\n  \"expectedArrival\": \"2025-08-05T14:30:00Z\",\n  \"locationId\": 1,\n  \"customFields\": {\n    \"department\": \"Sales\",\n    \"meetingRoom\": \"Conference Room A\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors"]
            },
            "description": "Create a new visitor registration.\n\n**Required Fields:**\n- firstName, lastName: Visitor's full name\n- email: Valid email address\n- purposeOfVisit: Reason for the visit\n- expectedArrival: Planned arrival time\n\n**Optional Fields:**\n- phone: Contact number\n- company: Visitor's organization\n- staffToMeet: Email of staff member to notify\n- locationId: Specific office location\n- customFields: Additional custom information\n\n**Automatic Actions:**\n- If staffToMeet is provided, notification email is sent\n- Visitor status set to 'Pending' by default\n- Audit trail created for tracking"
          },
          "response": []
        },
        {
          "name": "Get Visitor by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/visitors/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "1"]
            },
            "description": "Retrieve detailed information for a specific visitor.\n\n**Returns:**\n- Complete visitor profile\n- Visit history and status changes\n- Custom field values\n- Audit trail information"
          },
          "response": []
        },
        {
          "name": "Approve Visitor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvalNotes\": \"All security checks completed. Approved for main building access.\",\n  \"restrictions\": \"Escort required for restricted areas\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/1/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "1", "approve"]
            },
            "description": "Approve a visitor request. Requires Staff or Admin role.\n\n**Actions Performed:**\n- Updates visitor status to 'Approved'\n- Sends approval confirmation email\n- Records approval timestamp and user\n- Logs approval in audit trail\n\n**Optional Body Parameters:**\n- approvalNotes: Internal notes for the approval\n- restrictions: Any access restrictions or special instructions"
          },
          "response": []
        },
        {
          "name": "Reject Visitor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rejectionReason\": \"Security clearance required for this type of visit\",\n  \"alternativeContact\": \"security@company.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/1/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "1", "reject"]
            },
            "description": "Reject a visitor request. Requires Staff or Admin role.\n\n**Actions Performed:**\n- Updates visitor status to 'Rejected'\n- Sends polite rejection email with reason\n- Records rejection timestamp and user\n- Logs rejection in audit trail\n\n**Optional Body Parameters:**\n- rejectionReason: Explanation for the rejection\n- alternativeContact: Alternative contact for future requests"
          },
          "response": []
        },
        {
          "name": "Check-in Visitor",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"actualArrivalTime\": \"2025-08-05T14:35:00Z\",\n  \"escortRequired\": true,\n  \"escortName\": \"Jane Smith\",\n  \"accessBadgeNumber\": \"TEMP001\",\n  \"specialInstructions\": \"Visitor badge required at all times\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/1/checkin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "1", "checkin"]
            },
            "description": "Check-in an approved visitor. Requires Reception or Admin role.\n\n**Actions Performed:**\n- Updates visitor status to 'CheckedIn'\n- Records actual arrival time\n- Sends check-in confirmation email\n- Starts visit duration tracking\n\n**Body Parameters:**\n- actualArrivalTime: Actual arrival timestamp\n- escortRequired: Whether escort is needed\n- escortName: Name of assigned escort\n- accessBadgeNumber: Temporary badge identifier\n- specialInstructions: Any special access instructions"
          },
          "response": []
        },
        {
          "name": "Check-out Visitor",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"actualDepartureTime\": \"2025-08-05T16:30:00Z\",\n  \"badgeReturned\": true,\n  \"exitNotes\": \"Normal exit through main reception\",\n  \"feedbackRequested\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/visitors/1/checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "visitors", "1", "checkout"]
            },
            "description": "Check-out a visitor and complete their visit. Requires Reception or Admin role.\n\n**Actions Performed:**\n- Updates visitor status to 'CheckedOut'\n- Calculates total visit duration\n- Sends thank you and checkout email\n- Completes visit record\n\n**Body Parameters:**\n- actualDepartureTime: Actual departure timestamp\n- badgeReturned: Whether access badge was returned\n- exitNotes: Any notes about the departure\n- feedbackRequested: Whether to request visit feedback"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üè¢ Location Management",
      "description": "Office location and facility management",
      "item": [
        {
          "name": "Get All Locations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/locations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations"]
            },
            "description": "Retrieve all active office locations.\n\n**Returns:**\n- Location ID and name\n- Full address details\n- Contact information\n- Facility capabilities\n- Operating hours"
          },
          "response": []
        },
        {
          "name": "Create Location",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Mumbai Head Office\",\n  \"address\": \"123 Business District, Mumbai, Maharashtra 400001\",\n  \"contactPhone\": \"+91-22-12345678\",\n  \"contactEmail\": \"mumbai@babajishivram.com\",\n  \"operatingHours\": \"Monday-Friday: 9:00 AM - 6:00 PM\",\n  \"capacity\": 200,\n  \"facilities\": [\"Conference Rooms\", \"Parking\", \"Cafeteria\"],\n  \"securityLevel\": \"Standard\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/locations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations"]
            },
            "description": "Create a new office location. Requires Admin role.\n\n**Required Fields:**\n- name: Location identifier\n- address: Complete postal address\n- contactPhone: Primary contact number\n- contactEmail: Location email address\n\n**Optional Fields:**\n- operatingHours: Business hours\n- capacity: Maximum visitor capacity\n- facilities: Available amenities\n- securityLevel: Security classification"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë®‚Äçüíº Staff Management",
      "description": "Staff member and role management",
      "item": [
        {
          "name": "Get All Staff",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/staff?department=Sales&active=true",
              "host": ["{{baseUrl}}"],
              "path": ["api", "staff"],
              "query": [
                {
                  "key": "department",
                  "value": "Sales",
                  "description": "Filter by department"
                },
                {
                  "key": "active",
                  "value": "true",
                  "description": "Filter by active status"
                }
              ]
            },
            "description": "Retrieve list of staff members with filtering options.\n\n**Query Parameters:**\n- department: Filter by department name\n- active: Filter by active status\n- role: Filter by staff role\n- location: Filter by office location"
          },
          "response": []
        },
        {
          "name": "Create Staff Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"email\": \"jane.smith@company.com\",\n  \"phone\": \"+1234567890\",\n  \"department\": \"Sales\",\n  \"position\": \"Senior Sales Manager\",\n  \"locationId\": 1,\n  \"canApproveVisitors\": true,\n  \"maxVisitorsPerDay\": 10,\n  \"notificationPreferences\": {\n    \"emailNotifications\": true,\n    \"smsNotifications\": false\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/staff",
              "host": ["{{baseUrl}}"],
              "path": ["api", "staff"]
            },
            "description": "Create a new staff member profile. Requires Admin role.\n\n**Required Fields:**\n- firstName, lastName: Staff member's name\n- email: Unique email address\n- department: Department assignment\n- position: Job title\n\n**Optional Fields:**\n- phone: Contact number\n- locationId: Primary office location\n- canApproveVisitors: Visitor approval permission\n- maxVisitorsPerDay: Daily visitor limit\n- notificationPreferences: Communication preferences"
          },
          "response": []
        }
      ]
    },
    {
      "name": "‚öôÔ∏è System Configuration",
      "description": "System settings and configuration management",
      "item": [
        {
          "name": "Get System Settings",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/settings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "settings"]
            },
            "description": "Retrieve current system configuration settings.\n\n**Returns:**\n- General system settings\n- Email configuration status\n- Security settings\n- Business rules and limits\n- Feature toggles"
          },
          "response": []
        },
        {
          "name": "Update System Settings",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"companyName\": \"BABAJI SHIVRAM\",\n  \"defaultVisitDuration\": 120,\n  \"requireApprovalForAllVisits\": true,\n  \"autoApproveReturnVisitors\": false,\n  \"maxVisitorsPerDay\": 100,\n  \"businessHours\": {\n    \"start\": \"09:00\",\n    \"end\": \"18:00\",\n    \"timezone\": \"Asia/Kolkata\"\n  },\n  \"emailNotifications\": {\n    \"enabled\": true,\n    \"sendToVisitors\": true,\n    \"sendToStaff\": true,\n    \"sendToAdmins\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/settings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "settings"]
            },
            "description": "Update system configuration settings. Requires Admin role.\n\n**Configurable Settings:**\n- Company information\n- Default visit parameters\n- Approval workflows\n- Business hours\n- Notification preferences\n- Security policies"
          },
          "response": []
        },
        {
          "name": "Get Role Configurations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/roles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "roles"]
            },
            "description": "Retrieve role-based access control configurations.\n\n**Returns:**\n- Available system roles\n- Permission mappings\n- Role hierarchies\n- Custom role definitions"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä Reporting & Analytics",
      "description": "System reports and analytics endpoints",
      "item": [
        {
          "name": "Visitor Statistics",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/reports/visitor-stats?startDate=2025-08-01&endDate=2025-08-31&locationId=1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "visitor-stats"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-08-01",
                  "description": "Report start date (YYYY-MM-DD)"
                },
                {
                  "key": "endDate",
                  "value": "2025-08-31",
                  "description": "Report end date (YYYY-MM-DD)"
                },
                {
                  "key": "locationId",
                  "value": "1",
                  "description": "Filter by location (optional)"
                }
              ]
            },
            "description": "Generate visitor statistics report for specified date range.\n\n**Report Includes:**\n- Total visitor count\n- Approval/rejection rates\n- Average visit duration\n- Peak visit times\n- Department-wise breakdown\n- Repeat visitor analysis"
          },
          "response": []
        },
        {
          "name": "Email Performance",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/reports/email-performance?days=30",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "email-performance"],
              "query": [
                {
                  "key": "days",
                  "value": "30",
                  "description": "Number of days to include in report"
                }
              ]
            },
            "description": "Generate email system performance report.\n\n**Metrics Included:**\n- Email delivery success rates\n- Template usage statistics\n- Failed delivery analysis\n- Response time metrics\n- Error categorization"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Health & Monitoring",
      "description": "System health checks and monitoring endpoints",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Basic system health check.\n\n**Returns:**\n- Overall system status\n- API response time\n- Basic connectivity status"
          },
          "response": []
        },
        {
          "name": "Detailed Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/health/detailed",
              "host": ["{{baseUrl}}"],
              "path": ["health", "detailed"]
            },
            "description": "Comprehensive system health and dependency check.\n\n**Validates:**\n- Database connectivity\n- Email service status\n- External API dependencies\n- Disk space and memory usage\n- Cache performance"
          },
          "response": []
        }
      ]
    }
  ]
}
